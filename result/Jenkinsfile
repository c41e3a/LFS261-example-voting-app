pipeline {
    agent none

    stages {
        // build the docker image
        stage('build') {
            when{
                changeset '**/result/**'
            }
            agent any
            steps {
                echo 'Building result app'
                script{
                    docker.build("mrscrb/result:v${env.BUILD_ID}", "./result")
                }
            }
        }
        stage('test') {
            when{
                changeset '**/result/**'
            }
            agent{
                docker {
                    image 'mrscrb/result:v${env.BUILD_ID}'
                    args 'sh'
                }
            }
            steps {
                echo 'Running Unit Tests on result app'
                dir('result') {
                    sh 'npm test'
                }
            }
        }
        stage('publish') {
            when{
                changeset '**/result/**'
                branch 'master'
            }
            agent any
            steps {
                echo 'Publishing result app'
                script{
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                        dockerImage.push("mrscrb/result:v${env.BUILD_ID}")
                        dockerImage.push("latest")
                    }
                }
            }
        }
    }
    post {
        success {
            slackSend (channel: "#lfs261", message: "Build Success: ${env.JOB_NAME} ${env.BUILD_NUMBER}")
        }
        failure {
            slackSend (channel: "#lfs261", message: "Build Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER}")
        }
    }
}
